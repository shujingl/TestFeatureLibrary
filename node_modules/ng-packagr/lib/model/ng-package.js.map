{"version":3,"file":"ng-package.js","sourceRoot":"","sources":["../../../src/lib/model/ng-package.ts"],"names":[],"mappings":";;AAEA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7B,IAAM,YAAY,GAAG,GAAG,CAAC;AACzB,IAAM,oBAAoB,GAAG,GAAG,CAAC;AAGjC,4EAA4E;AAC5E;IAEE;QACE,gEAAgE;QACzD,WAAgB;QACvB,mEAAmE;QAC5D,aAA8B,EAC7B,QAAgB,EAChB,OAAqC;QAJtC,gBAAW,GAAX,WAAW,CAAK;QAEhB,kBAAa,GAAb,aAAa,CAAiB;QAC7B,aAAQ,GAAR,QAAQ,CAAQ;QAChB,YAAO,GAAP,OAAO,CAA8B;IAC5C,CAAC;IAEJ,sBAAW,2BAAI;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QACjE,CAAC;;;OAAA;IAED,sBAAW,0BAAG;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAChE,CAAC;;;OAAA;IAED,sBAAW,uCAAgB;aAA3B;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAC7E,CAAC;;;OAAA;IAED,sBAAW,yCAAkB;aAA7B;YACE,IAAI,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACxB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;;;OAAA;IAED,sBAAW,mCAAY;aAAvB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC;QACH,CAAC;;;OAAA;IAED,sBAAW,gCAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC7C,CAAC;;;OAAA;IAGD,sBAAW,2BAAI;QADf,+BAA+B;aAC/B;YACE,gDAAgD;YAChD,IAAI,KAAK,GAAW,KAAG,IAAI,CAAC,WAAW,CAAC,IAAM,EAAE,IAAI,GAAW,KAAG,IAAI,CAAC,WAAW,CAAC,IAAM,CAAC;YAC1F,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5E,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;gBAC/C,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gBAC/B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,CAAC,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,CAAC;QACzB,CAAC;;;OAAA;IAGD,sBAAW,gCAAS;QADpB,sBAAsB;aACtB;YACE,IAAM,IAAI,GAAW,aAAW,IAAI,CAAC,IAAI,CAAC,IAAI,YAAS,CAAC;YACxD,IAAM,MAAM,GAAc,IAAI,CAAC,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAI,CAAC,IAAI,YAAS,CAAC;YACrE,IAAM,MAAM,GAAc,IAAI,CAAC,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAI,CAAC,IAAI,QAAK,CAAC;YACjE,IAAM,OAAO,GAAc,IAAI,CAAC,kBAAkB,UAAO,CAAC;YAC1D,IAAM,QAAQ,GAAc,IAAI,CAAC,kBAAkB,mBAAgB,CAAC;YAEpE,MAAM,CAAC,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,CAAC;QACrD,CAAC;;;OAAA;IAEH,gBAAC;AAAD,CAAC,AApED,IAoEC;AApEY,8BAAS","sourcesContent":["import { SchemaClass } from '@ngtools/json-schema';\nimport { NgPackageConfig } from '../../ng-package.schema';\nconst path = require('path');\n\nconst SCOPE_PREFIX = '@';\nconst SCOPE_NAME_SEPARATOR = '/';\n\n\n/** POVO (plain-old value object :-)) of the Angular package being built. */\nexport class NgPackage {\n\n  constructor(\n    /** Unmodified contents of the project's `package.json` file. */\n    public packageJson: any,\n    /** Unmodified contents of the project's `ng-package.json` file. */\n    public ngPackageJson: NgPackageConfig,\n    private basePath: string,\n    private $schema: SchemaClass<NgPackageConfig>\n  ) {}\n\n  public get dest(): string {\n    return path.resolve(this.basePath, this.$schema.$$get('dest'));\n  }\n\n  public get src(): string {\n    return path.resolve(this.basePath, this.$schema.$$get('src'));\n  }\n\n  public get workingDirectory(): string {\n    return path.resolve(this.basePath, this.$schema.$$get('workingDirectory'));\n  }\n\n  public get flatModuleFileName(): string {\n    let name: string = this.$schema.$$get('lib.flatModuleFile');\n    if (!name) {\n      name = this.meta.name;\n    }\n\n    return path.basename(name);\n  }\n\n  public get libExternals(): Object {\n    if (this.ngPackageJson.lib) {\n      return this.ngPackageJson.lib.externals;\n    } else {\n      return {};\n    }\n  }\n\n  public get entryFile(): string {\n    return this.$schema.$$get('lib.entryFile');\n  }\n\n  /** Package meta information */\n  public get meta(): { name: string, scope?: string } {\n    // split into name and scope (`@<scope>/<name>`)\n    let scope: string = `${this.packageJson.name}`, name: string = `${this.packageJson.name}`;\n    if (name.startsWith(SCOPE_PREFIX) && name.indexOf(SCOPE_NAME_SEPARATOR) > 0) {\n      const idx = name.indexOf(SCOPE_NAME_SEPARATOR);\n      scope = name.substring(0, idx);\n      name = name.substring(idx + 1);\n    }\n\n    return { name, scope };\n  }\n\n  /** Build artefacts */\n  public get artefacts(): NgArtefacts {\n    const main: string = `bundles/${this.meta.name}.umd.js`;\n    const module: string = `${this.meta.scope}/${this.meta.name}.es5.js`;\n    const es2015: string = `${this.meta.scope}/${this.meta.name}.js`;\n    const typings: string = `${this.flatModuleFileName}.d.ts`;\n    const metadata: string = `${this.flatModuleFileName}.metadata.json`;\n\n    return { main, module, es2015, typings, metadata };\n  }\n\n}\n\n/** Generated build artefacts for an Angular library. */\nexport interface NgArtefacts {\n\n  /** Main JavaScript bundle in UMD (universal-module definition) and ES5 syntax. */\n  main: string;\n\n  /** Flat ECMAScript module in ES5 sxntax (FESM'5). */\n  module: string;\n\n  /** Flat ECMAScript module in ES2015 syntax (FESM'15). */\n  es2015: string;\n\n  /** TypeScript type definition file. */\n  typings: string;\n\n  /** Ahead-of-Time metadata (`.metadata.json`) file. */\n  metadata: string;\n}\n\n/**\n * One individual entrypoint for an Angular library that is being packaged.\n *\n * An `NgPackage` may have several entrypoints (primary and secondaries).\n * One `NgEntrypoint` gets compiled and bundled to a set of `NgArtefacts`.\n */\nexport interface NgEntrypoint {\n\n  /** TypeScript source file that serves as the entrypoint. */\n  entryFile: string;\n}\n"]}