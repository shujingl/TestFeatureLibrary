"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path = require('path');
var SCOPE_PREFIX = '@';
var SCOPE_NAME_SEPARATOR = '/';
/** POVO (plain-old value object :-)) of the Angular package being built. */
var NgPackage = /** @class */ (function () {
    function NgPackage(
        /** Unmodified contents of the project's `package.json` file. */
        packageJson, 
        /** Unmodified contents of the project's `ng-package.json` file. */
        ngPackageJson, basePath, $schema) {
        this.packageJson = packageJson;
        this.ngPackageJson = ngPackageJson;
        this.basePath = basePath;
        this.$schema = $schema;
    }
    Object.defineProperty(NgPackage.prototype, "dest", {
        get: function () {
            return path.resolve(this.basePath, this.$schema.$$get('dest'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "src", {
        get: function () {
            return path.resolve(this.basePath, this.$schema.$$get('src'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "workingDirectory", {
        get: function () {
            return path.resolve(this.basePath, this.$schema.$$get('workingDirectory'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "flatModuleFileName", {
        get: function () {
            var name = this.$schema.$$get('lib.flatModuleFile');
            if (!name) {
                name = this.meta.name;
            }
            return path.basename(name);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "libExternals", {
        get: function () {
            if (this.ngPackageJson.lib) {
                return this.ngPackageJson.lib.externals;
            }
            else {
                return {};
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "entryFile", {
        get: function () {
            return this.$schema.$$get('lib.entryFile');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "meta", {
        /** Package meta information */
        get: function () {
            // split into name and scope (`@<scope>/<name>`)
            var scope = "" + this.packageJson.name, name = "" + this.packageJson.name;
            if (name.startsWith(SCOPE_PREFIX) && name.indexOf(SCOPE_NAME_SEPARATOR) > 0) {
                var idx = name.indexOf(SCOPE_NAME_SEPARATOR);
                scope = name.substring(0, idx);
                name = name.substring(idx + 1);
            }
            return { name: name, scope: scope };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgPackage.prototype, "artefacts", {
        /** Build artefacts */
        get: function () {
            var main = "bundles/" + this.meta.name + ".umd.js";
            var module = this.meta.scope + "/" + this.meta.name + ".es5.js";
            var es2015 = this.meta.scope + "/" + this.meta.name + ".js";
            var typings = this.flatModuleFileName + ".d.ts";
            var metadata = this.flatModuleFileName + ".metadata.json";
            return { main: main, module: module, es2015: es2015, typings: typings, metadata: metadata };
        },
        enumerable: true,
        configurable: true
    });
    return NgPackage;
}());
exports.NgPackage = NgPackage;
//# sourceMappingURL=ng-package.js.map